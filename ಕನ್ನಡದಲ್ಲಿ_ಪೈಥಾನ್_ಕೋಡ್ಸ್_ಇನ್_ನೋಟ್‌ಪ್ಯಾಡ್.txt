# Lets us Online IDE to run these codes - ಈ ಕೋಡ್‌ಗಳನ್ನು ಚಲಾಯಿಸಲು ಆನ್‌ಲೈನ್ IDE ಬಳಸೋಣ.
# webaddress:-  https://pythononline.net/

# 1.

def ಮುದ್ರಿಸು(ಹೆಸರು):
    print(ಹೆಸರು)

# 2.

ಹೆಸರು = "ನನ್ನ ಹೆಸರು ಶಿವಕುಮಾರ"

# 3.

ಮುದ್ರಿಸು(ಹೆಸರು)

# 4. 

ಮುದ್ರಿಸು(7+6)

# 5. ನಿಮ್ಮ ಜನ್ಮ ದಿನಾಂಕವನ್ನು ನೀಡಿ.

ಮುದ್ರಿಸು(7+6+1984)

# 6. 

def ಮುದ್ರಿಸು(ಕನ್ನಡದಲ್ಲಿ):
    print(ಕನ್ನಡದಲ್ಲಿ)

# 7.

ಕನ್ನಡದಲ್ಲಿ = "ಕನ್ನಡದಲ್ಲಿ ಪೈಥಾನ್ ಕಲಿಕೆ"

# 8. 

ಮುದ್ರಿಸು(ಕನ್ನಡದಲ್ಲಿ)

# 9.

ಮುದ್ರಿಸು("ನನ್ನ ಹೆಸರು ಶಿವಕುಮಾರ.")


# 10.

ಮುದ್ರಿಸು(ಕನ್ನಡದಲ್ಲಿ)

# 11.

ಮುದ್ರಿಸು("ಕಂಪನಿ ಹೆಸರು : ಸೂರ್ಯೋದಯ")

# 12.

ಮುದ್ರಿಸು(1+2)

# 13.

from datetime import datetime
from dateutil.relativedelta import relativedelta

# ಹುಟ್ಟಿದ ದಿನಾಂಕವನ್ನು ನಿರ್ಧರಿಸಿ
ಹುಟ್ಟಿದ_ದಿನಾಂಕ = datetime(2002, 11, 22)

# ಇಂದಿನ ದಿನಾಂಕವನ್ನು ಪಡೆಯಿರಿ
ಈಗಿನ_ದಿನಾಂಕ = datetime.now()

# ವರ್ಷಗಳು, ತಿಂಗಳುಗಳು, ಮತ್ತು ದಿನಗಳಲ್ಲಿ ವ್ಯತ್ಯಾಸವನ್ನು ಲೆಕ್ಕಹಾಕಿ
ವರ್ಷ_ತಿಂಗಳು_ದಿನ = relativedelta(ಈಗಿನ_ದಿನಾಂಕ, ಹುಟ್ಟಿದ_ದಿನಾಂಕ)

# ಫಲಿತಾಂಶವನ್ನು ಕನ್ನಡದಲ್ಲಿ ಫಾರ್ಮಾಟ್ ಮಾಡಿ
ಫಲಿತಾಂಶ = f"ನಾನು ಪೈಥಾನ್, ನನ್ನ ವಯಸ್ಸು: {ವರ್ಷ_ತಿಂಗಳು_ದಿನ.years} ವರ್ಷ, {ವರ್ಷ_ತಿಂಗಳು_ದಿನ.months} ತಿಂಗಳು, {ವರ್ಷ_ತಿಂಗಳು_ದಿನ.days} ದಿನಗಳು"

print(ಫಲಿತಾಂಶ)



# 14.

# ಪ್ರೋಗ್ರಾಮ್: ಎರಡು ಸಂಖ್ಯೆಗಳ ಮೊತ್ತ ಕಂಡುಹಿಡಿಯಿರಿ

# ಇನ್‌ಪುಟ್ ಪಡೆಯಿರಿ (ಎರಡು ಸಂಖ್ಯೆಗಳು)
ಅಂಕಿ1 = int(input("ಮೊದಲ ಸಂಖ್ಯೆಯನ್ನು ನಮೂದಿಸಿ: "))
ಅಂಕಿ2 = int(input("ಎರಡನೇ ಸಂಖ್ಯೆಯನ್ನು ನಮೂದಿಸಿ: "))

# ಮೊತ್ತವನ್ನು ಲೆಕ್ಕಾಚಾರ ಮಾಡಿ
sum = ಅಂಕಿ1 + ಅಂಕಿ2

# ಫಲಿತಾಂಶವನ್ನು ಪ್ರದರ್ಶಿಸಿ
print("ಎರಡು ಸಂಖ್ಯೆಗಳ ಮೊತ್ತ:", sum)



# 15.

# ಕಾರ್ಯಕ್ರಮದ ಪ್ರಾರಂಭ
ಮುದ್ರಿಸು("ನಮಸ್ಕಾರ! ನೀವು ಹೇಗಿದ್ದೀರಿ?")  # ಇದು ಮೆಚ್ಚುಗೆ ಸಂದೇಶವನ್ನು ಪ್ರದರ್ಶಿಸುತ್ತದೆ

# 16.

ಮುದ್ರಿಸು("ನಿಮ್ಮನ್ನು ನೋಡಿ ಸಂತೋಷವಾಯಿತು.ನಾನು ಚೆನ್ನಾಗಿದ್ದೇನೆ, ನೀವು ಹೇಗಿದ್ದೀರಿ?") # ಕುಶುಲೋಪಚಾರ 


# 17.

# ಕನ್ನಡ ಶೈಲಿಯ ಮುದ್ರಣ ಕಾರ್ಯವನ್ನು ಸಾರಿಯೊಂದಿಗೆ ವಿವರಿಸಲಾಗುತ್ತಿದೆ
def ಮುದ್ರಿಸು(ಪ್ರೀತಿಯ_ಭಾಷೆ_ಕನ್ನಡ):
    print(ಪ್ರೀತಿಯ_ಭಾಷೆ_ಕನ್ನಡ)  # ಕನ್ನಡ ಪದಗಳನ್ನು ಮುದ್ರಿಸಲು python ನ `print` ಅನ್ನು ಬಳಸಲಾಗುತ್ತದೆ

# ರಾಧಾ ಮತ್ತು ಕೃಷ್ಣ ಅವರ ನಡುವಿನ ಮಾತುಕತೆ
# ರಾಧಾ ಮಾತನಾಡುವುದನ್ನು ಪ್ರಾರಂಭಿಸುತ್ತಾಳೆ
ಮುದ್ರಿಸು("ರಾಧಾ: ಕೃಷ್ಣ, ನಿನ್ನನ್ನು ನೋಡಿ ಸಂತೋಷವಾಯಿತು!")  # ರಾಧಾ ಕೃಷ್ಣನಿಗೆ ಸ್ವಾಗತ ಕೋರುತ್ತಾಳೆ
ಮುದ್ರಿಸು("ರಾಧಾ: ನೀನು ಚೆನ್ನಾಗಿದ್ದೀಯಾ?")  # ಕೃಷ್ಣನ ಆರೋಗ್ಯವನ್ನು ವಿಚಾರಿಸುತ್ತಾಳೆ

# ಕೃಷ್ಣ ಪ್ರತಿಕ್ರಿಯೆ ನೀಡುತ್ತಾನೆ
ಮುದ್ರಿಸು("ಕೃಷ್ಣ: ರಾಧಾ, ನಾನೂ ನಿನ್ನನ್ನು ನೋಡಿ ತುಂಬಾ ಸಂತೋಷವಾಯಿತು.")  # ಕೃಷ್ಣ ಸಂತೋಷವನ್ನು ವ್ಯಕ್ತಪಡಿಸುತ್ತಾನೆ
ಮುದ್ರಿಸು("ಕೃಷ್ಣ: ನಾನು ಚೆನ್ನಾಗಿದ್ದೇನೆ ರಾಧೆ, ನೀನು ಹೇಗಿದ್ದೀಯಾ?")  # ರಾಧಾಳನ್ನು ವಿಚಾರಿಸುತ್ತಾನೆ

# ರಾಧಾ ಮಾತುಕತೆ ಮುಂದುವರಿಸುತ್ತಾಳೆ
ಮುದ್ರಿಸು("ರಾಧಾ: ನಾನು ಚೆನ್ನಾಗಿದ್ದೇನೆ ಕೃಷ್ಣ. ಏನಾದರೂ ಹೊಸ ಸುದ್ದಿ ಇದೆಯೇ?")  # ಕೃಷ್ಣನ ಬಳಿ ಹೊಸ ಸುದ್ದಿಗಳನ್ನು ಕೇಳುತ್ತದೆ
ಮುದ್ರಿಸು("ರಾಧಾ: ನಿನ್ನ ಗೋಪಾಲಕೃಷ್ಣ ಧನುರ್ವಿದ್ಯೆ ಹೇಗಿದೆ?")  # ಕೃಷ್ಣನ ಕೌಶಲ್ಯಗಳನ್ನು ವಿಚಾರಿಸುತ್ತಾಳೆ

# ಕೃಷ್ಣ ಉತ್ತರಿಸುತ್ತಾನೆ
ಮುದ್ರಿಸು("ಕೃಷ್ಣ: ನಾನು ಪ್ರತಿ ದಿನ ಅಭ್ಯಾಸ ಮಾಡುತ್ತಿದ್ದೇನೆ. ಅದು ಚೆನ್ನಾಗಿದೆ.")  # ಕೃಷ್ಣ ತನ್ನ ಅಭ್ಯಾಸದ ಬಗ್ಗೆ ಹೇಳುತ್ತಾನೆ
ಮುದ್ರಿಸು("ಕೃಷ್ಣ: ಆದರೆ ರಾಧಾ, ನಿನ್ನ ಹಾಡುಗಳು ನನ್ನ ಮನಸ್ಸನ್ನು ಸಮಾಧಾನಗೊಳಿಸುತ್ತವೆ.")  # ಕೃಷ್ಣ ರಾಧಾಳ ಹಾಡುಗಳನ್ನು ಮೆಚ್ಚುತ್ತಾನೆ



# 18.

# ಇನ್ನೊಂದು ಉದಾಹರಣೆ : ಹೆಸರು ಮತ್ತು ವಯಸ್ಸನ್ನು ಪ್ರಿಂಟ್ ಮಾಡುವುದು.    # ಶಿವಕುಮಾರ # 18

ಹೆಸರು = input("ನಿಮ್ಮ ಹೆಸರನ್ನು ನಮೂದಿಸಿ: ")
ವಯಸ್ಸು = input("ನಿಮ್ಮ ವಯಸ್ಸನ್ನು ನಮೂದಿಸಿ : ")

print("ನನ್ನ ಹೆಸರು ", ಹೆಸರು, " ಮತ್ತು ನನ್ನ ವಯಸ್ಸು ", ವಯಸ್ಸು)


# 19.

 # 1 ಇನ್ನೊಂದು ಉದಾಹರಣೆ : ಹೆಸರು ಮತ್ತು ವಯಸ್ಸನ್ನು ಪ್ರಿಂಟ್ ಮಾಡುವುದು # ಪೈಥಾನ್ # 18

ಹೆಸರು = input("ನಿಮ್ಮ ಹೆಸರನ್ನು ನಮೂದಿಸಿ: ")
ವಯಸ್ಸು = input("ನಿಮ್ಮ ವಯಸ್ಸನ್ನು ನಮೂದಿಸಿ : ")

print("ನನ್ನ ಹೆಸರು ", ಹೆಸರು, " ಮತ್ತು ನನ್ನ ವಯಸ್ಸು ", ವಯಸ್ಸು)


# 20.

# ಬಳಕೆದಾರರ ಕುಶುಲೋಪಚಾರ ಮಾಡಿ
print("ನೀವು ಹೇಗಿದ್ದೀರಿ?, " + ಹೆಸರು + "!")  



# 21.

# ಕನ್ನಡ ಶೈಲಿಯ ಮುದ್ರಣ ಕಾರ್ಯವನ್ನು ಪರಿವರ್ತಿತ ಮಾಡಲಾಗುತ್ತದೆ
def ಮುದ್ರಿಸು(*ಕನ್ನಡ):
    print(*ಕನ್ನಡ)  # ಕನ್ನಡವನ್ನು unpack ಮಾಡಿ `print()` ಬಳಸಿ ಮುದ್ರಿಸಲಾಗುತ್ತದೆ

# ಅಂಕಗಣಿತದ ಕಾರ್ಯಾಚರಣೆಗಳು
ಅಂಕಿ1 = int(input("ದಯವಿಟ್ಟು ಮೊದಲ ಸಂಖ್ಯೆಯನ್ನು ನಮೂದಿಸಿ: "))  # ಮೊದಲ ಸಂಖ್ಯೆ
ಅಂಕಿ2 = int(input("ದಯವಿಟ್ಟು ಎರಡನೇ ಸಂಖ್ಯೆಯನ್ನು ನಮೂದಿಸಿ: "))  # ಎರಡನೇ ಸಂಖ್ಯೆ

# ಸಂಖ್ಯೆಗಳ ಮೊತ್ತ ಮತ್ತು ಉತ್ಪತ್ತಿಯನ್ನು ಲೆಕ್ಕಿಸೋಣ
ಕುಡಿಸಿದ_ಮೊತ್ತ = ಅಂಕಿ1 + ಅಂಕಿ2
ಗುಣಿಸಿದ_ಮೌಲ್ಯ = ಅಂಕಿ1 * ಅಂಕಿ2

# ಫಲಿತಾಂಶಗಳನ್ನು ಪ್ರದರ್ಶಿಸೋಣ
ಮುದ್ರಿಸು("ಈ ಎರಡೂ ಸಂಖ್ಯೆಗಳ ಕುಡಿಸಿದ ಮೊತ್ತ: ", ಕುಡಿಸಿದ_ಮೊತ್ತ)
ಮುದ್ರಿಸು("ಈ ಎರಡೂ ಸಂಖ್ಯೆಗಳ ಗುಣಿಸಿದ ಮೌಲ್ಯ: ", ಗುಣಿಸಿದ_ಮೌಲ್ಯ)



# 22.

# ಪ್ರೋಗ್ರಾಮಿಂಗ್‌ನಲ್ಲಿ ಲೂಪ್ ಎನ್ನುವುದು ಒಂದು ನಿರ್ದಿಷ್ಟ ಸ್ಥಿತಿಯನ್ನು ಪೂರೈಸುವವರೆಗೆ ಪುನರಾವರ್ತಿಸುವ ಸೂಚನೆಗಳ ಅನುಕ್ರಮವಾಗಿದೆ. 
# ಲೂಪ್‌ಗಳು ಪ್ರೋಗ್ರಾಮಿಂಗ್‌ಗೆ ಮೂಲಭೂತವಾಗಿವೆ ಮತ್ತು ಪುನರಾವರ್ತಿತ ಕಾರ್ಯಗಳನ್ನು ಸ್ವಯಂಚಾಲಿತಗೊಳಿಸಲು ಬಳಸಲಾಗುತ್ತದೆ.
# ಲೂಪ್ ಉದಾಹರಣೆ (for loop)

ಮುದ್ರಿಸು("0 ರಿಂದ 10 ರ ವರೆಗಿನ ಸಂಖ್ಯೆಗಳು:")
for i in range(0, 11): # 1 ರಿಂದ 10 ರ ವರೆಗೆ (11 ಹೊರತುಪಡಿಸಿ)
    ಮುದ್ರಿಸು(i)


# 23.

# ಕನ್ನಡ ಶೈಲಿಯ ಮುದ್ರಣ ಕಾರ್ಯವನ್ನು ಪರಿವರ್ತಿತ ಮಾಡಲಾಗಿದೆ
def ಮುದ್ರಿಸು(*ಕನ್ನಡ):
    print(*ಕನ್ನಡ)  # ಕನ್ನಡವನ್ನು ತೆರೆಮಾಡಿ ಮುದ್ರಿಸಲಾಗುತ್ತದೆ

# ಕನ್ನಡ ಸಂಖ್ಯೆಗಳ ನಕ್ಷೆ (೦ ರಿಂದ ೯ ರವರೆಗಿನ ಸಂಖ್ಯೆಗಳು)
ಕನ್ನಡ_ಸಂಖ್ಯೆಗಳು = ["೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯"]  # ಪ್ರತಿ ಅಂಕಿಗೆ ಕನ್ನಡ ರೂಪ

# ಸಂಖ್ಯೆಯನ್ನು ಕನ್ನಡ ಸಂಖ್ಯೆಗೆ ರೂಪಾಂತರಿಸುವ ಕಾರ್ಯ
def ಕನ್ನಡ_ರೂಪಾಂತರ(ಸಂಖ್ಯೆ):
    # ಎಲ್ಲಾ ಅಂಕಿಗಳನ್ನು ಕನ್ನಡ ರೂಪಕ್ಕೆ ಪರಿವರ್ತಿಸಲು join ಬಳಕೆ
    return "".join(ಕನ್ನಡ_ಸಂಖ್ಯೆಗಳು[int(ಅಂಕಿ)] for ಅಂಕಿ in str(ಸಂಖ್ಯೆ))

# ೧ ರಿಂದ ೧೦ ರವರೆಗೆ ಸಂಖ್ಯೆಗಳನ್ನು ಪ್ರದರ್ಶಿಸುವ ಲೋಪ್
ಮುದ್ರಿಸು("೧ ರಿಂದ ೧೦ ರವರೆಗಿನ ಸಂಖ್ಯೆಗಳು:")  # ಶೀರ್ಷಿಕೆ ಮುದ್ರಿಸಲು
for i in range(1, 20):  # ೧ ರಿಂದ ೧೦ ರವರೆಗೆ (೧೧ ಅನ್ನು ಹೊರತುಪಡಿಸಿ)
    ಮುದ್ರಿಸು(ಕನ್ನಡ_ರೂಪಾಂತರ(i))  # ಪ್ರತಿ ಸಂಖ್ಯೆಯನ್ನು ಕನ್ನಡ ರೂಪದಲ್ಲಿ ಮುದ್ರಿಸುವುದು



# 24.

# ಪಟ್ಟಿ[ಲಿಸ್ಟ್] ಉದಾಹರಣೆ

fruits = ["ಸೇಬು", "ಬಾಳೆಹಣ್ಣು", "ಕಿತ್ತಳೆ"]

ಮುದ್ರಿಸು("ಹಣ್ಣುಗಳ ಪಟ್ಟಿ:")
for fruit in fruits:
    ಮುದ್ರಿಸು(fruit)

#ನಿರ್ದಿಷ್ಟ ಐಟೆಮ್ ಪ್ರಿಂಟ್ ಮಾಡಲು
ಮುದ್ರಿಸು("ಮೊದಲ ಹಣ್ಣು:", fruits[0]) #  ಪಟ್ಟಿ[ಲಿಸ್ಟ್] ಸೂಚ್ಯಂಕ ಶೂನ್ಯ (೦) ಇಂದ ಶುರು ಆಗುತ್ತದೆ.


# 25.

# ಕಂಡೀಷನಲ್ ಸ್ಟೇಟ್‌ಮೆಂಟ್ ಉದಾಹರಣೆ (if-else)

ಅಂಕಿ = int(input("ಸಂಖ್ಯೆಯನ್ನು ನಮೂದಿಸಿ: "))

if ಅಂಕಿ > 0:
    ಮುದ್ರಿಸು("ಸಂಖ್ಯೆಯು ಧನಾತ್ಮಕವಾಗಿದೆ")
elif ಅಂಕಿ == 0:
    ಮುದ್ರಿಸು("ಸಂಖ್ಯೆಯು ಸೊನ್ನೆ ಆಗಿದೆ")
else:
    ಮುದ್ರಿಸು("ಸಂಖ್ಯೆಯು ಋಣಾತ್ಮಕವಾಗಿದೆ")


# 26.

#  ವಿವರಣೆ:

# ಪ್ರತಿಯೊಂದು ಸಾಲಿನಲ್ಲೂ ಟಿಪ್ಪಣಿ (ಕಾಮೆಂಟ್‌)ಗಳನ್ನು ಕನ್ನಡದಲ್ಲಿ ಬರೆಯಲಾಗಿದೆ, ಇದು ಸ೦ಕೇತ (ಕೋಡ್) ಏನು ಮಾಡುತ್ತದೆ ಎಂದು ವಿವರಿಸುತ್ತದೆ.
# input() ಫಂಕ್ಷನ್ ಯೂಸರ್ ಇಂದ ಇನ್‌ಪುಟ್ ಪಡೆಯಲು ಬಳಸಲಾಗುತ್ತದೆ.
# int() ಫಂಕ್ಷನ್ ಸ್ಟ್ರಿಂಗ್ ಇನ್‌ಪುಟ್ ಅನ್ನು ಇಂಟೀಜರ್‌ಗೆ ಪರಿವರ್ತಿಸುತ್ತದೆ.
# print() ಫಂಕ್ಷನ್ ಔಟ್‌ಪುಟ್ ಅನ್ನು ಪ್ರದರ್ಶಿಸಲು ಬಳಸಲಾಗುತ್ತದೆ.
# if-elif-else ಕಂಡೀಷನಲ್ ಸ್ಟೇಟ್‌ಮೆಂಟ್‌ಗಳನ್ನು ನಿರ್ಧಾರಗಳನ್ನು ತೆಗೆದುಕೊಳ್ಳಲು ಬಳಸಲಾಗುತ್ತದೆ.
# for ಲೂಪ್ ಅನ್ನು ಕೋಡ್‌ನ ಬ್ಲಾಕ್ ಅನ್ನು ನಿರ್ದಿಷ್ಟ ಸಂಖ್ಯೆಯ ಬಾರಿ ಪುನರಾವರ್ತಿಸಲು ಬಳಸಲಾಗುತ್ತದೆ.
# range() ಫಂಕ್ಷನ್ ಸಂಖ್ಯೆಗಳ ಸರಣಿಯನ್ನು ರಚಿಸುತ್ತದೆ.
# ಲಿಸ್ಟ್ ಗಳನ್ನು ಡೇಟಾ ಸಂಗ್ರಹಿಸಲು ಬಳಸಲಾಗುತ್ತದೆ.
# ಈ ಕೋಡ್ ತುಣುಕುಗಳು ಪೈಥಾನ್‌ನ ಮೂಲಭೂತ ಪರಿಕಲ್ಪನೆಗಳನ್ನು ಕನ್ನಡದಲ್ಲಿ ವಿವರಿಸುತ್ತವೆ ಮತ್ತು ಆರಂಭಿಕರಿಗೆ ಅರ್ಥಮಾಡಿಕೊಳ್ಳಲು ಸುಲಭವಾಗಿಸುತ್ತದೆ. ನೀವು ಈ ಉದಾಹರಣೆಗಳನ್ನು ಪ್ರಯತ್ನಿಸಬಹುದು ಮತ್ತು ಪೈಥಾನ್ ಕಲಿಯಲು ಪ್ರಾರಂಭಿಸಬಹುದು.

# ಮುಖ್ಯ ಸೂಚನೆ: ಪೈಥಾನ್ ಪ್ರೋಗ್ರಾಮಿಂಗ್ ಭಾಷೆಯ ಕೀವರ್ಡ್‌ಗಳು (ಉದಾಹರಣೆಗೆ if, else, for, print, int, input ಇತ್ಯಾದಿ) ಇಂಗ್ಲಿಷ್‌ನಲ್ಲಿಯೇ ಇರುತ್ತವೆ. ಕೇವಲ ಕಾಮೆಂಟ್‌ಗಳು ಮತ್ತು ಪ್ರಿಂಟ್ ಸ್ಟೇಟ್‌ಮೆಂಟ್‌ಗಳಲ್ಲಿ ಕನ್ನಡವನ್ನು ಬಳಸಲಾಗಿದೆ. ಇದು ಪೈಥಾನ್ ಸಿಂಟಾಕ್ಸ್‌ನ ಅವಶ್ಯಕತೆಯಾಗಿದೆ.

# ಈ ಕೋಡ್ ನಿಮಗೆ ಉಪಯುಕ್ತವಾಗಿದೆ ಎಂದು ಭಾವಿಸುತ್ತೇನೆ. ಹೆಚ್ಚಿನ ಪ್ರಶ್ನೆಗಳಿದ್ದರೆ ಕೇಳಲು ಹಿಂಜರಿಯಬೇಡಿ.



# 27.


It's great you're looking to advance your Python skills! Here's a structured approach to learning the next level of Python in Kannada, focusing on key areas and resources:

1. Object-Oriented Programming (OOP) (ವಸ್ತು-ಆಧಾರಿತ ಪ್ರೊಗ್ರಾಮಿಂಗ್)

Concepts: Classes (ವರ್ಗಗಳು), Objects (ವಸ್ತುಗಳು), Inheritance (ಉತ್ತರಾಧಿಕಾರ), Polymorphism (ಬಹುರೂಪತೆ), Encapsulation (ಸಂಕ್ಷಿಪ್ತತೆ).
Kannada Explanation: Think of a "class" as a blueprint (ನಕ್ಷೆ) for creating objects. For example, a "Car" class can have properties like color, model, and methods like start(), stop(). Objects are specific instances of that class (ಉದಾಹರಣೆಗೆ, ನನ್ನ ಕಾರು, ನಿಮ್ಮ ಕಾರು).
Example (Conceptual Kannada):


# 28.

Example (Conceptual Kannada):
# ವರ್ಗ: ಕಾರು
ವರ್ಗ ಕಾರು:
    # ಗುಣಲಕ್ಷಣಗಳು (ಬಣ್ಣ, ಮಾದರಿ)
    # ವಿಧಾನಗಳು (ಚಾಲನೆ(), ನಿಲ್ಲಿಸು())

# ವಸ್ತು: ನನ್ನ ಕಾರು (ಕೆಂಪು ಬಣ್ಣದ ಫೆರಾರಿ)
ನನ್ನ_ಕಾರು = ಕಾರು()
ನನ್ನ_ಕಾರು.ಬಣ್ಣ = "ಕೆಂಪು"
ನನ್ನ_ಕಾರು.ಚಾಲನೆ() # ಕಾರು ಚಲಿಸುತ್ತದೆ


# 29.

2. Modules and Packages (ಮಾಡ್ಯೂಲ್‌ಗಳು ಮತ್ತು ಪ್ಯಾಕೇಜ್‌ಗಳು)

Concepts: Organizing code into reusable units. Modules are single files, packages are collections of modules.
Kannada Explanation: ಮಾಡ್ಯೂಲ್‌ಗಳು ನಿಮ್ಮ ಕೋಡ್ ಅನ್ನು ವ್ಯವಸ್ಥಿತವಾಗಿ ಇರಿಸಲು ಸಹಾಯ ಮಾಡುತ್ತವೆ. ಪ್ಯಾಕೇಜ್‌ಗಳು ಸಂಬಂಧಿತ ಮಾಡ್ಯೂಲ್‌ಗಳ ಗುಂಪುಗಳಾಗಿವೆ.
Example: math (ಗಣಿತ), os (ಕಾರ್ಯನಿರ್ವಹಣಾ ವ್ಯವಸ್ಥೆ), datetime (ದಿನಾಂಕ ಮತ್ತು ಸಮಯ) ಮಾಡ್ಯೂಲ್‌ಗಳಾಗಿವೆ. NumPy (ಸಂಖ್ಯಾತ್ಮಕ ಲೆಕ್ಕಾಚಾರ) ಒಂದು ಪ್ಯಾಕೇಜ್ ಆಗಿದೆ.


# 30.

File Handling (ಕಡತ ನಿರ್ವಹಣೆ)

Concepts: Reading from and writing to files.
Kannada Explanation: ನಿಮ್ಮ ಪ್ರೋಗ್ರಾಮ್‌ನಲ್ಲಿ ಡೇಟಾವನ್ನು ಉಳಿಸಲು ಮತ್ತು ಓದಲು ಇದು ಉಪಯುಕ್ತವಾಗಿದೆ (ಉದಾಹರಣೆಗೆ, ಪಠ್ಯ ಕಡತಗಳು, CSV ಕಡತಗಳು).


# 31.

# ಕಡತ ತೆರೆಯಿರಿ (ಓದಲು)
f = open("data.txt", "r")
# ಕಡತದಿಂದ ಓದಿ
data = f.read()
# ಕಡತ ಮುಚ್ಚಿ
f.close()


# 32.

# ಕಡತ ತೆರೆಯಿರಿ (ಬರೆಯಲು)
f = open("output.txt", "w")
# ಕಡತಕ್ಕೆ ಬರೆಯಿರಿ
f.write("ಇದು ಹೊಸ ಡೇಟಾ")
# ಕಡತ ಮುಚ್ಚಿ
f.close()

# 33.

4.Exception Handling (ವ್ಯತಿರಿಕ್ತ ನಿರ್ವಹಣೆ)

Concepts: Handling errors gracefully using try-except blocks.
Kannada Explanation: ಪ್ರೋಗ್ರಾಮ್ ರನ್ ಆಗುವಾಗ ದೋಷಗಳು ಸಂಭವಿಸಬಹುದು. try-except ಬ್ಲಾಕ್‌ಗಳನ್ನು ಬಳಸಿ ಅವುಗಳನ್ನು ನಿರ್ವಹಿಸುವುದು ಮುಖ್ಯ.


# 34.

try:
    num = int(input("ಸಂಖ್ಯೆಯನ್ನು ನಮೂದಿಸಿ: "))
    result = 10 / num
    print(result)
except ZeroDivisionError:
    ಮುದ್ರಿಸು("ಸೊನ್ನೆಯಿಂದ ಭಾಗಿಸಲು ಸಾಧ್ಯವಿಲ್ಲ!")
except ValueError:
    ಮುದ್ರಿಸು("ಸರಿಯಾದ ಸಂಖ್ಯೆಯನ್ನು ನಮೂದಿಸಿ!")


# 35.


5. Working with Libraries (ಲೈಬ್ರರಿಗಳೊಂದಿಗೆ ಕೆಲಸ ಮಾಡುವುದು)

Popular Libraries:
NumPy: ಸಂಖ್ಯಾತ್ಮಕ ಲೆಕ್ಕಾಚಾರ, ಮ್ಯಾಟ್ರಿಸೆಸ್.
Pandas: ಡೇಟಾ ವಿಶ್ಲೇಷಣೆ, ಡೇಟಾ ಫ್ರೇಮ್‌ಗಳು.
Matplotlib: ಡೇಟಾ ದೃಶ್ಯೀಕರಣ (ಗ್ರಾಫ್‌ಗಳು).
Requests: ವೆಬ್‌ನಿಂದ ಡೇಟಾ ಪಡೆಯಲು.
Kannada Explanation: ಲೈಬ್ರರಿಗಳು ಪೂರ್ವ-ನಿರ್ಮಿತ ಕೋಡ್ ಅನ್ನು ಒದಗಿಸುತ್ತವೆ, ಅದು ನಿಮ್ಮ ಕೆಲಸವನ್ನು ಸುಲಭಗೊಳಿಸುತ್ತದೆ.


# 36.

Resources in Kannada:

GUVI: Offers Python courses in Kannada with IIT certification.
ACTE Technologies: Provides Python training in Kannada with hands-on learning.
MicroDegree: Offers online Python certification courses with industry projects.
YouTube: Search for "Python in Kannada" to find tutorials and explanations.


# 37.

Learning Tips:

Practice Regularly: ಕೋಡ್ ಅನ್ನು ನಿಯಮಿತವಾಗಿ ಬರೆಯಿರಿ.
Work on Projects: ಸಣ್ಣ ಯೋಜನೆಗಳನ್ನು ಮಾಡಿ (ಉದಾಹರಣೆಗೆ, ಒಂದು ಕ್ಯಾಲ್ಕುಲೇಟರ್, ಒಂದು ಸರಳ ಆಟ).
Use Online Resources: ಆನ್‌ಲೈನ್ ಟ್ಯುಟೋರಿಯಲ್‌ಗಳು ಮತ್ತು ಡಾಕ್ಯುಮೆಂಟೇಶನ್ ಬಳಸಿ.
Join Communities: ಆನ್‌ಲೈನ್ ಫೋರಮ್‌ಗಳು ಮತ್ತು ಸಮುದಾಯಗಳಲ್ಲಿ ಭಾಗವಹಿಸಿ.


# 38.

By focusing on these areas and utilizing the available resources, you can effectively enhance your Python skills in Kannada. Remember to practice consistently and apply your knowledge through practical projects. Good luck!

